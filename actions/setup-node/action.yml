name: Action for Node.js
description: Node.js setup cache

inputs:
  node-version:
    description: Node.js version
    required: false
    default: 18.x

runs:
  using: composite
  steps:
    - name: Use Node.js ${{ inputs.node-version }}
      uses: actions/setup-node@v3.7.0
      with:
        node-version: ${{ inputs.node-version }}
        registry-url: "https://registry.npmjs.org"

    - uses: actions/cache@v3.3.1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-nodejs-${{ inputs.node-version }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nodejs-

    - name: Restore node_modules from cache
      id: cache-node-modules
      uses: actions/cache@v3.3.1
      with:
        path: |
          **/node_modules/
        key: ${{ runner.os }}-nodejs-${{ inputs.node-version }}__${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nodejs-${{ inputs.node-version }}__

    - shell: bash
      run: echo "CYPRESS_CACHE_FOLDER=./node_modules/cache-cypress" >> $GITHUB_ENV

    - shell: bash
      run: |
        echo "Show environment Node.js, npm ..."
        node -v
        npm -v

    - name: Clean install dependencies
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: npm ci --loglevel error --audit=false --fund=false
      shell: bash

    - id: output
      shell: bash
      run: |
        echo "root-package-version=v$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
        echo "root-package-major-version=$(node -p "parseInt(require('./package.json').version)")" >> $GITHUB_OUTPUT
        echo "is-release-candidate=$(node -p "require('./package.json').version.includes('rc')")" >> $GITHUB_OUTPUT
