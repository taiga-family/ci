name: Action for Node.js
description: Node.js setup cache

inputs:
  node-version:
    description: Node.js version
    required: false
    default: 22.x
  node-registry:
    description: Registry
    required: false
    default: 'https://registry.npmjs.org'
  npm-ci-flags:
    description: NPM flags
    required: false
    default: ''
  node-path:
    description: nested node path
    required: false
    default: |
      node_modules/
      **/node_modules/
  validate-peer-deps:
    description: Validation peer dependencies
    required: false
    default: 'true'
  nx-path:
    description: nx path
    required: false
    default: |
      .angular/
      .nx/

outputs:
  root-package-version:
    description: Full version of root package.json (x.y.z)
    value: ${{ steps.output.outputs.root-package-version }}
  root-package-major-version:
    description: Only major version of root package.json (x)
    value: ${{ steps.output.outputs.root-package-major-version }}
  is-release-candidate:
    description: root package.json includes -rc
    value: ${{ steps.output.outputs.is-release-candidate }}

runs:
  using: composite
  steps:
    - name: Use Node.js ${{ inputs.node-version }}
      uses: actions/setup-node@v4.4.0
      with:
        node-version: ${{ inputs.node-version }}
        registry-url: ${{ inputs.node-registry }}

    - shell: bash
      run: |
        echo "Show environment Node.js, npm ..."
        node -v
        npm -v

    - shell: bash
      run: echo "CYPRESS_CACHE_FOLDER=./node_modules/cypress/cache-cypress" >> $GITHUB_ENV

    - name: Restore node_modules from cache
      id: cache-node-modules
      uses: actions/cache@v4.2.4
      with:
        path: ${{ inputs.node-path }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

    - name: Load Nx cache state for NX_BASE
      uses: actions/cache@v4
      if: steps.cache-node-modules.outputs.cache-hit == 'true'
      with:
        path: ${{ inputs.nx-path }}
        key: '${{ runner.os }}-node-${{ inputs.node-version }}-nx-caches-${{ env.NX_BASE }}'

    - shell: bash
      run: |
        npm set strict-ssl false
        npm config set fund false
        npm config set audit false
        npm config set fetch-retries 10
        npm config set fetch-retry-mintimeout 600000
        npm config set fetch-retry-maxtimeout 1200000
        npm config set fetch-timeout 1800000

    - name: Clean install dependencies
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      id: clean-install
      run: npm ci ${{ inputs.npm-ci-flags }}
      shell: bash

    - name: Save Nx cache state
      if: github.ref == 'refs/heads/main'
      uses: actions/cache/save@v4
      with:
        path: ${{ inputs.node-path }}
        key: '${{ runner.os }}-node-${{ inputs.node-version }}-nx-caches-${{ github.sha }}'

    - id: output
      shell: bash
      run: |
        echo "root-package-version=v$(node -p "require('./package.json')?.version")" >> $GITHUB_OUTPUT
        echo "root-package-major-version=$(node -p "parseInt(require('./package.json')?.version)")" >> $GITHUB_OUTPUT
        echo "is-release-candidate=$(node -p "require('./package.json')?.version?.includes('rc')")" >> $GITHUB_OUTPUT

    - name: Confirm a package-lock.json actually resolves all dependencies in a package.json
      shell: bash
      run: |
        if [[ "${{ inputs.validate-peer-deps }}" == "true" ]]; then
          npm ls
        fi

    - id: audit
      continue-on-error: true
      shell: bash
      if: github.event.pull_request.number
      run: |
        set +e
        npm audit --audit-level=critical > npm-audit.txt
        exit_code=$(echo $?)
        echo "exit_code=$exit_code" >> $GITHUB_OUTPUT
        echo "Exit code: $exit_code"

          AUDIT_SUMMARY=$(grep -E "(vulnerabilities|low|moderate|high|critical)" npm-audit.txt | tail -n 1 || echo "No vulnerabilities found")
          AUDIT_CONTENT=$(cat npm-audit.txt | sed 's/&/&amp;/g; s/</&lt;/g; s/>/&gt;/g; s/"/&quot;/g; s/'"'"'/&#39;/g')

          if [ $exit_code -eq 0 ]; then
            HEADER="âœ… NPM Audit Good"
          else
            HEADER="ðŸš¨ NPM Audit Error"
          fi

          {
              echo "<h3>$HEADER</h3>"
              echo "<p><strong>$AUDIT_SUMMARY</strong></p>"
              echo
              echo "<details>"
              echo "<summary>Show details</summary>"
              echo
              echo '```'
              echo "$AUDIT_CONTENT"
              echo '```'
              echo
              echo "</details>"
          } > npm-audit.txt

    - uses: peter-evans/find-comment@v3
      if: github.event.pull_request.number
      continue-on-error: true
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body-includes: NPM Audit

    - uses: peter-evans/create-or-update-comment@v4
      if: github.event.pull_request.number
      continue-on-error: true
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-id: ${{ steps.fc.outputs.comment-id }}
        body-file: npm-audit.txt
        edit-mode: replace

    - name: Cleanup audit files
      if: github.event.pull_request.number
      continue-on-error: true
      shell: bash
      run: rm -f npm-audit.txt
